# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  workflow_dispatch:
    inputs:
      releaseversion:
        description: 'Release version'
        required: true

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Maven Central Repository
      uses: actions/setup-java@v1
      with:
        java-version: '8'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.OSSHR_GPG_SECRET_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE
        overwrite-settings: true
        
    - name: Publish toMaven repository
      run: mvn deploy --batch-mode --no-transfer-progress -P Release
      env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ github.event.inputs.releaseversion }}
          release_name: ${{ github.event.inputs.releaseversion }}
          body: |
            Grab the new version from Maven central https://repo1.maven.org/maven2/de/codecentric/cxf-spring-boot-starter/${{ github.event.inputs.releaseversion }}/ by using it in your deps (also use the newest cxf-spring-boot-starter-maven-plugin https://github.com/codecentric/cxf-spring-boot-starter-maven-plugin):

            ```
              <dependency>
                  <groupId>com.github.miachm.sods</groupId>
                  <artifactId>SODS</artifactId>
                  <version>${{ github.event.inputs.releaseversion }}</version>
              </dependency>
            ```
          draft: false
          prerelease: false
